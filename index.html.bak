<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Recipe Generation API</title>
	<style>
		body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji"; margin: 2rem; line-height: 1.5; }
		label { display: block; margin-top: 1rem; font-weight: 600; }
		input, textarea, select, button { width: 100%; padding: 0.6rem 0.7rem; margin-top: 0.4rem; border: 1px solid #ccc; border-radius: 8px; font-size: 1rem; }
		button { cursor: pointer; background: #111827; color: white; }
		.container { max-width: 800px; margin: 0 auto; }
		.response { white-space: pre-wrap; background: #f9fafb; padding: 1rem; border-radius: 8px; margin-top: 1rem; border: 1px solid #e5e7eb; }
		small { color: #6b7280; }
	</style>
</head>
<body>
	<div class="container">
		<h1>Recipe Generation API</h1>
		<p>Use this form to call <code>POST /generate</code> on the local server.</p>

		<form id="genForm">
			<label>Ingredients <small>(comma-separated)</small>
				<input type="text" id="ingredients" placeholder="tomato, basil, garlic" />
			</label>

			<label>Cuisine
				<input type="text" id="cuisine" placeholder="Italian" />
			</label>

			<label>Dietary
				<input type="text" id="dietary" placeholder="vegetarian" />
			</label>

			<label>Max new tokens
				<input type="number" id="max_new_tokens" value="256" min="16" max="1024" />
			</label>

			<label>Temperature
				<input type="number" id="temperature" value="0.8" min="0" max="2" step="0.1" />
			</label>

			<label>Top-p
				<input type="number" id="top_p" value="0.95" min="0.1" max="1" step="0.05" />
			</label>

			<button type="submit">Generate</button>
		</form>

		<pre id="output" class="response" aria-live="polite"></pre>
	</div>

	<script>
		const form = document.getElementById('genForm');
		const out = document.getElementById('output');
		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			out.textContent = 'Generating...';
			try {
				const payload = {
					ingredients: document.getElementById('ingredients').value || null,
					cuisine: document.getElementById('cuisine').value || null,
					dietary: document.getElementById('dietary').value || null,
					max_new_tokens: parseInt(document.getElementById('max_new_tokens').value, 10),
					temperature: parseFloat(document.getElementById('temperature').value),
					top_p: parseFloat(document.getElementById('top_p').value),
					do_sample: true
				};
				const res = await fetch('/generate', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify(payload)
				});
				if (!res.ok) {
					const txt = await res.text();
					throw new Error(`HTTP ${res.status}: ${txt}`);
				}
				const data = await res.json();
				out.textContent = data.recipe;
			} catch (err) {
				out.textContent = String(err);
			}
		});
	</script>
</body>
</html>


